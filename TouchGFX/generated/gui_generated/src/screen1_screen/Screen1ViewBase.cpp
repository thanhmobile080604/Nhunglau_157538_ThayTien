/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    tetris.setBitmap(touchgfx::Bitmap(BITMAP_TETRIS_ID));
    tetris.setPosition(20, -10, 200, 150);
    tetris.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(tetris);

    buttonPlay.setXY(33, 140);
    buttonPlay.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTION_ID));
    buttonPlay.setLabelText(touchgfx::TypedText(T___SINGLEUSE_4JYA));
    buttonPlay.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonPlay.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonPlay.setAction(buttonCallback);
    add(buttonPlay);

    levelButton.setXY(33, 208);
    levelButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTION_ID));
    levelButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_LXTP));
    levelButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    levelButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    levelButton.setAction(buttonCallback);
    add(levelButton);

    textArea1.setXY(155, 218);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_LEVELSCREEN1).getText());
    textArea1.setWildcard(textArea1Buffer);
    textArea1.resizeToCurrentText();
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SDGV));
    add(textArea1);
}

Screen1ViewBase::~Screen1ViewBase()
{

}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonPlay)
    {
        //Interaction1
        //When buttonPlay clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
    }
    if (&src == &levelButton)
    {
        //Interaction2
        //When levelButton clicked call virtual function
        //Call updateLevel
        updateLevel();
    }
}
